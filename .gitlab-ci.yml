variables:
  DOCKER_IMAGE: "docker:stable"

include:
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml


stages:
- test
- build

sast:
  stage: test

unit-test:
  stage: test
  image: python:3.8.13
  # services:
  #   - name: datadog/agent:latest
  #     alias: ddogagent
  # variables:
  #   DD_API_KEY: $DD_API_KEY
  #   DD_INSIDE_CI: "true"
  #   DD_HOSTNAME: "ddogagent"
  #   DD_AGENT_HOST: "ddogagent"
  #   DD_TRACE_AGENT_URL: "http://ddogagent:8126"
  #   DD_ENV: "ci"
  #   DD_SERVICE: "gg-bot-upload-assistant"
  #   DD_TRACE_DEBUG: "true"
  script:
    # - pip install -U ddtrace
    - pip install -r requirements_test.txt
    - pip freeze > requirements_test.txt
    - python -m pytest -v --cov-report=html --cov=./ .
    # - python -m pytest --ddtrace -v --cov-report=html --cov=./ .
  artifacts:
    paths:
      - coverage
    expire_in: 30 days


# Image ID: registry.gitlab.com/noobmaster669/gg-bot-upload-assistant:{TAG}
# Image Description: Normal Docker Image build and stored in GitLab Container Registry
# Build Conditions: On all branches and tags
gitlab-docker-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - |
      echo "Publishing Image to Gitlab Container Registry: '$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "dev"'  # runs for every tags and master branch
      exists:
        - Dockerfile
        



# Image ID: registry.gitlab.com/noobmaster669/gg-bot-upload-assistant:FullDisk-{TAG}
# Image Description: Normal Docker Image build and stored in GitLab Container Registry
# Build Conditions: On all branches and tags
gitlab-fulldisk-docker-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":FullDisk-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'FullDisk-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":FullDisk-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":FullDisk-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f Dockerfile.disk .
    - |
      echo "Publishing Image to Gitlab Container Registry: '$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.disk




# Image ID: noobmaster669/gg-bot-uploader:{TAG}
# Image Description: Normal Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile




# Image ID: noobmaster669/gg-bot-uploader:aarch64-{TAG}
# Image Description: arm32v7 Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image-aarch64:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":aarch64-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'aarch64-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":aarch64-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":aarch64-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.aarch64 .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.aarch64




# Image ID: noobmaster669/gg-bot-uploader:arm32v7-{TAG}
# Image Description: arm32v7 Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image-armhf:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":arm32v7-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'arm32v7-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":arm32v7-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":arm32v7-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.armhf .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}" 
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.armhf




# Image ID: noobmaster669/gg-bot-uploader:FullDisk-{TAG}
# Image Description: Normal Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-fulldisk-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":FullDisk-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'FullDisk-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":FullDisk-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":FullDisk-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.disk .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.disk
