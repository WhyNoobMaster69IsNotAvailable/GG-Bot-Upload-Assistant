variables:
  DOCKER_IMAGE: "docker:stable"

include:
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: cicd/.gitlab-ci-unit-test.yml


stages:
- test
- setup
- build

sast:
  stage: test


# ********************************************** #
# ********************************************** #
#                Unit Tests GG-BOT               #
# ********************************************** #
# ********************************************** #
unit-test:
  stage: test
  image: noobmaster669/gg-bot-base:test-latest
  services:
    - name: datadog/agent:latest
      alias: ddogagent
  variables:
    DD_API_KEY: $DD_API_KEY
    DD_INSIDE_CI: "true"
    DD_HOSTNAME: "ddogagent"
    DD_AGENT_HOST: "ddogagent"
    DD_TRACE_AGENT_URL: "http://ddogagent:8126"
    DD_ENV: "ci"
    DD_SERVICE: "gg-bot-upload-assistant"
    DD_TRACE_DEBUG: "true"
  script:
    - pip install -r requirements/requirements_test.txt
    - pip freeze > requirements/requirements_test.txt
    # - python -m pytest -vv --cov-report=html --cov=./ .
    # - python -m pytest --ddtrace -vv --show-capture=stdout --cov-report=html --cov-report=xml --cov=./ .
    # - coverage run -m pytest --ddtrace -vv --show-capture=stdout --cov-report=html --cov-report=xml --cov=./ .
    - pytest --ddtrace -vv --show-capture=stdout --cov-report=html --cov-report=xml --cov=./ .
    # - coverage xml -o reports/coverage_1.xml
    - sed -i 's|" filename="|" filename="src/|g' coverage/coverage.xml
  # coverage: '/TOTAL.*\s([.\d]+)%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml
    paths:
      - coverage
      - coverage/coverage.xml
    expire_in: 30 days


# ********************************************** #
# ********************************************** #
#                GG-BOT Uploaders                #
# ********************************************** #
# ********************************************** #

# Image ID: registry.gitlab.com/noobmaster669/gg-bot-upload-assistant:{TAG}
# Image Description: Normal Docker Image build and stored in GitLab Container Registry
# Build Conditions: On all branches and tags
gitlab-docker-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - |
      echo "Publishing Image to Gitlab Container Registry: '$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "dev"'  # runs for every tags and master branch
      exists:
        - Dockerfile
        

# Image ID: registry.gitlab.com/noobmaster669/gg-bot-upload-assistant:FullDisk-{TAG}
# Image Description: Normal Docker Image build and stored in GitLab Container Registry
# Build Conditions: On all branches and tags
gitlab-fulldisk-docker-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.disk ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":FullDisk-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'FullDisk-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":FullDisk-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":FullDisk-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f Dockerfile.disk .
    - |
      echo "Publishing Image to Gitlab Container Registry: '$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.disk


# Image ID: noobmaster669/gg-bot-uploader:{TAG}
# Image Description: Normal Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile


# Image ID: noobmaster669/gg-bot-uploader:aarch64-{TAG}
# Image Description: arm32v7 Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image-aarch64:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.aarch64 ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":aarch64-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'aarch64-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":aarch64-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":aarch64-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.aarch64 .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.aarch64


# Image ID: noobmaster669/gg-bot-uploader:arm32v7-{TAG}
# Image Description: arm32v7 Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-image-armhf:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.armhf ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":arm32v7-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'arm32v7-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":arm32v7-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":arm32v7-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.armhf .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}" 
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.armhf


# Image ID: noobmaster669/gg-bot-uploader:FullDisk-{TAG}
# Image Description: Normal Docker Image build and stored in Docker Registry
# Build Conditions: On all tags and master branch
docker-hub-fulldisk-image:
  stage: build
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.disk ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":FullDisk-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'FullDisk-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":FullDisk-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":FullDisk-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$DOCKER_CI_REGISTRY_IMAGE${tag}" -f Dockerfile.disk .
    - |
      echo "Publishing Image to Docker Hub Container Registry: '$DOCKER_CI_REGISTRY_IMAGE${tag}"
    - docker push "$DOCKER_CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # runs for every tags and master branch
      exists:
        - Dockerfile.disk

# ********************************************** #
# ********************************************** #
#             Base Images For GG-BOT             #
# ********************************************** #
# ********************************************** #


#
# -------------- noobmaster669/gg-bot-base:latest
# This is the base image for GG-BOT Upload Assistant
#
gg-bot-base-image:
  stage: setup
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.baseimage ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image 'gg-bot-base${tag}"
    - docker build --pull -t "gg-bot-base${tag}" -f Dockerfile.baseimage .
    - |
      echo "Publishing Image to Gitlab Container Registry: 'gg-bot-base${tag}"
    - docker push "gg-bot-base${tag}"
  only:
    changes:
      - Dockerfile.baseimage


#
# -------------- noobmaster669/gg-bot-base:aarch64-latest
# This is the base image for GG-BOT Upload Assistant aarch64 flavour
#
gg-bot-base-image-aarch64:
  stage: setup
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.baseimage.aarch64 ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":aarch64-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'aarch64-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":aarch64-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":aarch64-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image 'gg-bot-base${tag}"
    - docker build --pull -t "gg-bot-base${tag}" -f Dockerfile.baseimage.aarch64 .
    - |
      echo "Publishing Image to Gitlab Container Registry: 'gg-bot-base${tag}"
    - docker push "gg-bot-base${tag}"
  only:
    changes:
      - Dockerfile.baseimage.aarch64


#
# -------------- noobmaster669/gg-bot-base:armhf-latest
# This is the base image for GG-BOT Upload Assistant armhf flavour
#
gg-bot-base-image-armhf:
  stage: setup
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.baseimage.armhf ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":armhf-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'armhf-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":armhf-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":armhf-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image 'gg-bot-base${tag}"
    - docker build --pull -t "gg-bot-base${tag}" -f Dockerfile.baseimage.armhf .
    - |
      echo "Publishing Image to Gitlab Container Registry: 'gg-bot-base${tag}"
    - docker push "gg-bot-base${tag}"
  only:
    changes:
      - Dockerfile.baseimage.armhf


#
# -------------- noobmaster669/gg-bot-base:test-latest
# This is the base image for running GG-BOT uploaders unit tests.
#
gg-bot-base-image-test:
  stage: setup
  image:
    name: $DOCKER_IMAGE
  services:
   - name: docker:dind
     alias: buildcontainer
     entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  variables:
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_CI_REGISTRY_USER" -p "$DOCKER_CI_REGISTRY_PASSWORD" $DOCKER_CI_REGISTRY
  script:
    - mv Dockerfiles/Dockerfile.baseimage.test ./
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":test-latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'test-latest'"
      elif [[ $CI_COMMIT_TAG ]]; then
        tag=":test-$CI_COMMIT_TAG"
        echo "Running for tag '$CI_COMMIT_TAG': tag = $tag"
      else
        tag=":test-$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      echo "Building Image 'gg-bot-base${tag}"
    - docker build --pull -t "gg-bot-base${tag}" -f Dockerfile.baseimage.test .
    - |
      echo "Publishing Image to Gitlab Container Registry: 'gg-bot-base${tag}"
    - docker push "gg-bot-base${tag}"
  only:
    changes:
      - Dockerfile.baseimage.test