#########################################################
#     _____             __ _                           #
#    / ____|           / _(_)                          #
#   | |     ___  _ __ | |_ _  __ _   ___ _ ____   __   #
#   | |    / _ \| '_ \|  _| |/ _` | / _ \ '_ \ \ / /   #
#   | |___| (_) | | | | | | | (_| ||  __/ | | \ V /    #
#    \_____\___/|_| |_|_| |_|\__, (_)___|_| |_|\_/     #
#                             __/ |                    #
#                            |___/                     #
#                                                      #
########################################################

################################################################
#                                                              #
#           Private tracker API keys & Announce URLs           #
#                                                              #
################################################################
# AsianCinema
ACM_API_KEY=# API_KEY
ACM_ANNOUNCE_URL=https://asiancinema.me/announce/<TRACKER_PASS_KEY>

# Beyond-HD
BHD_API_KEY=# API_KEY
BHD_ANNOUNCE_URL=https://beyond-hd.me/announce/<TRACKER_PASS_KEY>

# Blutopia
BLU_API_KEY=# API_KEY
BLU_ANNOUNCE_URL=https://blutopia.xyz/announce/<TRACKER_PASS_KEY>

# Racing4Everyone
R4E_API_KEY=# API_KEY
R4E_ANNOUNCE_URL=https://racing4everyone.eu/announce/<TRACKER_PASS_KEY>

# Aither
ATH_API_KEY=# API_KEY
ATH_ANNOUNCE_URL=https://aither.cc/announce/<TRACKER_PASS_KEY>

# Telly.wtf
TELLY_API_KEY=# API_KEY
TELLY_ANNOUNCE_URL=https://telly.wtf/announce/<TRACKER_PASS_KEY>

# Ntelogo
NTELOGO_API_KEY=# API_KEY
NTELOGO_ANNOUNCE_URL= https://ntelogo.org/announce/<TRACKER_PASS_KEY>

# TheScenePlace
TSP_API_KEY=# API_KEY
TSP_ANNOUNCE_URL=http://www.thesceneplace.com/announce.php?pid=<TRACKER_PASS_KEY>

# DesiTorrents
DT_API_KEY=# API_KEY
DT_ANNOUNCE_URL=https://desitorrents.rocks/announce/<TRACKER_PASS_KEY>

# SkipTheCommericals
STC_API_KEY=# API_KEY
STC_ANNOUNCE_URL=https://skipthecommericals.xyz/announce/<TRACKER_PASS_KEY>

# SkipTheTrailers
STT_API_KEY=# API_KEY
STT_ANNOUNCE_URL=https://skipthetrailers.xyz/announce/<TRACKER_PASS_KEY>

# SpeedApp
SPD_API_KEY=# API_KEY
SPD_ANNOUNCE_URL=https://ramjet.speedapp.io/<TRACKER_PASS_KEY>/announce

# TorrentDB
TDB_API_KEY=# Tracker Passkey
TDB_ANNOUNCE_URL=https://reactor.torrentdb.net/announce/<TRACKER_PASS_KEY>

# BIT-HDTV
BHDTV_API_KEY=# API_KEY
BHDTV_ANNOUNCE_URL=http://tracker.bit-hdtv.com:2710/<TRACKER_PASS_KEY>/announce

# Nebulance
NBL_API_KEY=# API_KEY - Torrent List and Upload permissions required
NBL_ANNOUNCE_URL=http://nebulance.io:4400/<TRACKER_PASS_KEY>/announce

# Anthelion
ANT_API_KEY=# API_KEY - Torrent List and Upload permissions required
ANT_ANNOUNCE_URL=https://tracker.anthelion.me:34001/<TRACKER_PASS_KEY>/announce

# ReelFliX
RF_API_KEY=# API_KEY
RF_ANNOUNCE_URL=https://reelflix.xyz/announce/<TRACKER_PASS_KEY>

# Swarmazon
SZN_API_KEY=# API_KEY
SZN_ANNOUNCE_URL=https://tracker.swarmazon.club:8443/<TRACKER_PASS_KEY>/announce

# LST
LST_API_KEY=# API_KEY
LST_ANNOUNCE_URL=https://lst.gg/announce/<TRACKER_PASS_KEY>



################################################################
#                                                              #
#                    Other API Keys / Defaults                 #
#                                                              #
################################################################
# TMDB API key (Required)
TMDB_API_KEY=

# (Optional) Comma separated list of trackers which should be considered as default or fallback trackers in case `--trackers or -t`  flag is not provided.
# eg: default_tracker_list=NBL,BLU,BHDTV -> This will by default uploads the torrent to NBL, BLU and BHDTV if `--trackers or -t` is not provided as command line argument.
# please not that the command line argument `--trackers or -t` has higher priority and overrides `default_tracker_list` property.
default_trackers_list=





################################################################
#                                                              #
#                         Image Hosts                          #
#                                                              #
################################################################
# 6 options are available --> |  imgbox  |  imgbb  |  freeimage  |  ptpimg  |  imgfi  |  imgur  |  snappie  |
# set their order below (spelling matters) (to remove a host just delete the value and leave it blank)
img_host_1=
img_host_2=
img_host_3=
img_host_4=
img_host_5=
img_host_6=
img_host_7=
# set the image hosts API keys below
imgbox_api_key=leave_blank # No API key needed here, don't touch this line https://pypi.org/project/pyimgbox/
ptpimg_api_key= # follow https://github.com/theirix/ptpimg-uploader#api-key guide to get api key
imgbb_api_key=
freeimage_api_key=
snappie_api_key=# Get in touch with staff to get API KEY
imgfi_api_key=# Get in touch with staff to get API KEY
imgur_api_key=# this is your client_secret
imgur_client_id=# register your application (https://api.imgur.com/oauth2/addclient) with Anonymous usage without user authorization to get client id and secret

# pretty self explanatory, this will take number of screenshots you want, all evenly spaced depending on how long the video is
# Set this to 0 if you want to upload without taking any screenshots
num_of_screenshots=10
thumb_size=350
# when no_spoilers is enabled, screenshots will be taken from the first half of the file
# when no_spoilers is disabled, screenshots will be taken from the whole file after equal intervals
no_spoilers=true





################################################################
#                                                              #
#                Check for dupes (true | false)                #
#                                                              #
################################################################
check_dupes=true
# 100% matches will always be rejected so you'll need to set 'check_dupes' to 'false' if you insist on uploading a dupe (??)
# ------------------------------------------------------------ #
# ! Lower == Better ! (this is a percentage of similarity between your file and what's already on the tracker)
# Typically 80 filters out most obvious dupes (Don't include the percentage symbol below), if you want to be more cautious you should choose a lower number

# SEE EXAMPLES BELOW
# --------------------------- #
# You're uploading: Atomic Blonde 2017 1080p UHD Bluray DD+ 7.1 HDR x265-NCmt
# Already on site:  Atomic Blonde 2017 1080p UHD BluRay DD+7.1 HDR x265 - HQMUX
# similarity percentage = 84%
# --------------------------- #
# You're uploading: Rogue 2020 1080p Bluray DD 5.1 x264-BHDStudio
# Already on site:  Rogue 2020 1080p BluRay DTS 5.1 x264-iFT
# similarity percentage = 79%
# --------------------------- #
# You're uploading: Get Him to the Greek 2010 1080p Bluray DTS-HD MA 5.1 AVC Remux-EPSiLON
# Already on site:  Get Him to the Greek 2010 Unrated BluRay 1080p DTS-HD MA 5.1 AVC REMUX-FraMeSToR
# similarity percentage = 88%
# --------------------------- #
acceptable_similarity_percentage=75





################################################################
#                                                              #
#                            Auto Mode                         #
#                                                              #
################################################################
# Set this to 'False' if you want an interactive & hands on experience
# You'll be prompted to select the correct TMDB ID, Prompted to fix any small issues/discrepancies found during the upload process
# !! It's recommended to keep this set to 'False' !!
auto_mode=false
#
#
# !! THIS ONLY APPLIES IF ^^ "auto_mode=true" ^^  !!
# Set this to 'true' if you want an upload to to be forced through unless a critical issue is found
# e.g. If we can't auto detect 'audio_channels', we can still upload but we'll just omit that part from the torrent title
# But if something like 'resolution' can't be detected then the upload will be cancelled since 'resolution' is a required API/Upload Key
# !! It's recommended to keep this set to 'False' !! (Remember, you are responsible for following all tracker rules!)
force_auto_upload=false



# Live / Draft (BHD)
# ------------------------------------------------------------ #
# This only applies to BHD since they are the only site that have a 'draft'/'live on site' option
# Its great for testing and verifying the script submits the correct info before posting it live
#   True == Live on site, everyone can see it
#   False == Goes to your private drafts https://beyond-hd.me/drafts
live=False



# This is required to upload raw bluray discs (.iso not supported)
# download & install docker then clone https://github.com/zoffline/BDInfoCLI-ng
# Inside the project files for BDInfoCLI-ng you'll find a folder called 'scripts' and in it you'll find the file 'bdinfo'
# You want to paste the full system path to that 'bdinfo' file here
#
# If you are using the docker version of the uploader, then there is not need to fill in this value
# just use FullDisk-{TAG} docker image and you are good to go
bdinfo_script=





################################################################
#                                                              #
#               Post Processing / Cross-Seeding                #
#                                                              #
################################################################
# GG-BOT Uploader is capable of 2 kinds of post processing steps
# 1. Immediate seeding via torrent client
#        Once a torrent has been uploaded, the uploader can add the dot torrent to a torrent client for immediate seeding.
# 2. Move media and torrents to watch folders
#       You can specify a "Watch Directory" in some torrent clients that will automatically add new .torrent files to its download queue
#       this could be used to automatically start seeding an upload using AutoTools (rtorrent)
#
# Once a torrent has been uploaded, the uploader can add the dot torrent to a torrent client for immediate seeding.
# this feature can be enabled or disabled based on the property below (True/False)
enable_post_processing=False
# you can select the mode using this property. (CROSS_SEED / WATCH_FOLDER)
post_processing_mode=CROSS_SEED



# WATCH_FOLDER_CONFIGS
# Note: Please ensure that the below two paths (if configured) are available and writable.
# Uploader will not create these paths.
dot_torrent_move_location=
media_move_location=
# when type based move is enabled,
# --- torrents will be moved to sub folders within the dot_torrent_move_location
# --- media will be moved to sub folders within the media_move_location
#
# where the subfolder will be the type
# eg: movies dot torrent will be moved to {dot_torrent_move_location}/movie/...torrent
#     epsiodes dot torrent  will be moved to {dot_torrent_move_location}/epsiode/...torrent
#
#     movies file will be moved to {media_move_location}/movie/...file
#     epsiodes file will be moved to {media_move_location}/epsiode/...file
enable_type_base_move=false



# CROSS-SEEDING CONFIGS
# Specifies the client to which torrents needs to be uploaded.
# Possible Values: |  Qbittorrent  |  Rutorrent  |  Deluge (Not Implemented)  |  Transmisison (Not Implemented)  |
client=Qbittorrent
# These are the configurations needed to connect to the torrent client
client_host=# https://qbit.mydomain.com
client_port=# 443
client_username=# username
client_password=# my_password
# applicable for rutorrent only as of now. Default is /
client_path=/
# The label / category to which cross-seeding torrents needs to be added to.
# Default: GGBotCrossSeed
cross_seed_label=

# If you are running the torrent client / uploader in a docker containers there is a high chance that the paths accessible inside the containers will
# be different. For such cases, path translations can be used for propper seeding.
# If you're running the client / uploader in a docker container you will need to map the containers download path to its system path
# (If you are using Sonarr/Radarr then you've already probably done this under "Remote Path Mappings" in the "Download Clients" section)
# e.g.
#     Uploader container / system path: /mnt/local/downloads/torrents/rutorrent/completed/file.mkv
#     Client container / system path:   /media/torrents/rutorrent/completed/file.mkv
#
#     ------- Using those paths ^^ you would set the mappings like this
#     uploader_accessible_path=/mnt/local/downloads/
#     client_accessible_path=/media/
#
#   --------- That way the file with path `/mnt/local/downloads/torrents/rutorrent/completed/file.mkv`
#             will be uploaded to client with path `/media/torrents/rutorrent/completed/file.mkv`
# This allows us to translate the "d.data_path" rtorrent returns to something that this project can access/upload
#
# ------ If you aren't using docker containers for anything and your rtorrent path is the same as your system path, set 'translation_needed' equal to False ----- #
translation_needed=False
client_accessible_path=
uploader_accessible_path=



################################################################
#                                                              #
#                       Uploader Tweaks                        #
#                                                              #
################################################################
# This property decided whether or not the sub_folders in temp_upload containing screnshots, mediainfo, urls etc needs to be in a human readable format or not.
# By default a unique hash will be generated for the input path and it'll be used.
# If this property is enabled then the sub_folder will be created using the file name.
readable_temp_data=False

# Uploader signature is added at the bottom of the torrent description. By default if no signature is provided the upload assistant will add
# ``` Uploaded with ❤ using GG-BOT Upload Assistant ``` as the uploader signature.
# With this property you can add your own custom signature to torrent uploads.
# Notes:
#   1. The signature provided has to be plain text or must be a valid bbcode
#   2. The signature will automatically be wrapped inside [center][/center] tag by the upload assistant
# Sample: uploader_signature=[url=https://ibb.co/VH6n8tC][img]https://i.ibb.co/VH6n8tC/Manchester-United-Logo11.jpg[/img][/url]
uploader_signature=
